@use '@angular/material' as mat;
@use '../../../easings' as easings;

/* Entity Details Sidenav */
.sidebar {
  width: 0;
  right: 0;
  top: 128px;
  position: fixed;
  background-color: #eee;
  overflow: auto;
  height: calc(100% - 410px);
  padding: 8px 15px 15px 15px;
  display: none;

  &.sidebar-expanded {
    width: 40%;
    display: block;
  }
}

#main.sidebar-expanded {
  margin-right: 40%;
  padding-right: 65px;
}

.selection-history {
  padding: 8px 15px 0px 15px;
}

.sidebar-expanded .entity-details .entity-grid .grid-item:hover,
.sidebar-expanded .collection-details .entity-grid .grid-item:hover {
  box-shadow:
    0 2px 1px -1px rgba(0, 0, 0, 0.2),
    0 1px 1px 0 rgba(0, 0, 0, 0.14),
    0 1px 3px 0 rgba(0, 0, 0, 0.12);
}

.sidebar-expanded .collection-details .entity-grid {
  display: grid;
  grid-gap: 1em;
  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
}

.sidebar.sidebar-expanded .close-sidebar-button {
  position: fixed;
  right: 5px;
  transform: scale(0.75);
  z-index: 5;
  background-color: #ccc;
}

/* TODO(mdc-migration): The following rule targets internal classes of option that may no longer apply for the MDC version. */
mat-option {
  mat-icon {
    position: absolute;
    right: 0;
    top: 5px;
  }
}

#password-protection,
#compilation-fingerprint {
  margin-bottom: 10px;
}

.grid-item {
  mat-icon {
    &.help {
      cursor: help;
    }
    &.button {
      cursor: pointer;
    }
  }
}

.content {
  box-sizing: border-box;
  flex-direction: column;
  display: flex;
}

.paginator-container {
  flex-direction: row;
  display: flex;
  justify-content: flex-end;
  align-items: center;
}

.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic {
  color: white;
}

div.loading-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;

  display: flex;
  flex-direction: column;
  align-items: center;

  filter: opacity(0);
  background-color: rgba(255, 255, 255, 0.9);
  transition: filter 500ms ease;
  z-index: 9999;
  pointer-events: none;

  &.visible {
    filter: opacity(1);
    pointer-events: all;
    user-select: none;
  }
}
